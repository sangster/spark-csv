c
index
contact
c
incomplete
contacts
incomplete
c
pp pp report.complete_contacts.select {|c| c[:email] == 'woodrowdbrown@mailinator.com'}
pp report.complete_contacts.select {|c| c[:email] == 'woodrowdbrown@mailinator.com'}
pp report.complete_contacts.select {|c| c[:email] == 'mkessler@welchandsons.net'}
pp report.complete_contacts.select {|c| c[:email] == 'mariojmclemore@mailinator.com'}
pp report.complete_contacts.select {|c| c[:email] == 'magpads@gmail.com'}
pp report.complete_contacts.select {|c| c[:email] == 'woodrowdbrown@mailinator.com'}
report.complete_contacts
pp contact
contact
exit
c
dupes
c
groups[_]
groups
dupes
_
c
pp groups.entries.select{|v| v[1].size>1}.map{|v|v[0]}
pp groups.entries.select{|v| v[1].size>1}
pp groups.entries.select{|v| v.second.size>1}
pp groups.entries.select{|v| v.second.size>1}.map{|v|v.first[:email]}
pp groups.entries
pp groups.entries.select{|v| v.size>1}.map{|v|v.first[:email]}
pp groups.entries.values.select{|v| v.size>1}.map{|v|v.first[:email]}
pp groups.entries[2]
pp groups.entries[1]
pp groups.entries.first
groups.entries.first
groups.entries
groups[1]
groups
pp groups[2]
pp groups[1]
pp groups[0]
groups.select 
groups.first
groups.keys
groups
exit
c
contact[:city].to_s
contact[:city]&.empty?
contact[:city]
contact.keys - QA_COLUMNS
(contact.keys - QA_COLUMNS).none? { |col| contact[col]&.empty? }
contact
n
contact
n
contact
n
contact
n
contact
n
contact
contact.keys - QA_COLUMNS
contact.keys
c
reader.to_a
c
table.first.to_h
table.first
c
cc.headers
cc.methods
cc = CSV.parse(read, headers: true)
